.modal-backdrop {
  z-index: 11;
  display: none;
}
#confirmationModal {
  &.show {
    opacity: 1;
  }
  &.fade:not(.show) {
    display: none;
    pointer-events: none;
    user-select: none;
  }
}
dialog,
.modal {
  z-index: 999;
  position: fixed;
  left: 50%;
  top: 50%;
  width: auto;
  height: auto;
  z-index: 14;
  transform: translate(-50%, -50%);
  max-height: 80vh;
  background: transparent;
  border: 0;
  opacity: 0;
  border-radius: 15px;
  padding: 0;
  display: flex;
  justify-content: center;
  align-content: center;
  transition:
    opacity 0.7s ease-out,
    transform 0.7s ease-out,
    overlay 0.7s ease-out allow-discrete,
    display 0.7s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
  &::backdrop {
    background-color: rgb(0 0 0 / 50%);
    transition:
      display 0.7s allow-discrete,
      overlay 0.7s allow-discrete,
      background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
  }
  &.fade:not(.show) {
    pointer-events: none;
    * {
      pointer-events: none;
    }
  }
  &[style='display: block;'] {
    display: flex !important;
  }
  &.show {
    opacity: 1;
  }
  /* Open state of the dialog  */
  &:open {
    opacity: 1;
    // transform: translate(-50%, -50%) scale(1);
  }
  .modal-dialog {
    max-height: 100%;
    width: 100%;
    border: 2px solid var(--primary-clr_500);
    margin: 0;
    overflow-y: scroll;
    box-shadow: 0px 0px 5px var(--primary-clr_300);
    border-radius: 15px;
    max-height: 80vh;
    overflow-y: scroll;
    // backdrop-filter: brightness(200%) blur(5px);
    // background: color-mix(in srgb, var(--white) 40%, transparent);
    background: var(--white);
    .modal-content {
      border-radius: 15px;
      position: relative;
    }
    .modal-body {
      .inventory-main-img img {
        max-width: 300px;
      }
      .list-group {
        border-radius: 15px;
      }
    }
  }
}

/* Before open state  */
/* Needs to be after the previous dialog:open rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog:open {
    opacity: 0;
    // transform: translate(-50%, -50%) scale(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog:open::backdrop {
    background-color: rgb(0 0 0 / 100%);
  }
}

dialog,
.modal {
  @media (width<1000px) {
    width: 80vw;
  }
  @media (width<600px) {
    width: 90vw;
  }
}
body {
  .modal-backdrop {
    transition: 0.2s ease;
    background-color: color-mix(in srgb, var(--primary-clr_950) 00%, transparent);
    z-index: 11;
    // backdrop-filter: blur(0px) brightness(1);
    &.show {
      background-color: color-mix(in srgb, var(--primary-clr_950) 40%, transparent);
      // backdrop-filter: blur(2px) brightness(0.5);
    }
  }
}

@media (width < 800px) {
  body .modal-backdrop.show {
    // backdrop-filter: brightness(0.5);
  }
}
