@mixin body-bg($color: var(--body-color), $opacity: 0.7) {
  border-radius: 15px;
  background-image: url('images/overlays/otis-redding_noise.png');
  background-color: color-mix(in srgb, $color calc(100% * $opacity), transparent);
  backdrop-filter: saturate(200%) blur(5px);
  box-shadow: 0 0 10px color-mix(in srgb, var(--active-clr_600) 20%, transparent);
}
@mixin card-bg($color: var(--body-color), $opacity: 0.7) {
  border: 1px var(--white) solid;
  border-radius: 15px;
  background-color: color-mix(in srgb, var(--white) 20%, transparent);
  border-radius: 15px;
  box-shadow: 0 2px 10px color-mix(in srgb, var(--active-clr_600) 20%, transparent);
  width: 100%;
}
@mixin hover-preview($opacity: 4%) {
  transition: 0.5s var(--bounce_linear);
  transform: scale(1);
  $offset_x: 4px;
  $offset_y: 4px;
  $blur: 3px;
  @if ($opacity != 0) {
    filter: drop-shadow(-$offset_x ($offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent))
      drop-shadow($offset_x ($offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent));
      // drop-shadow((-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent))
      // drop-shadow(($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent));
    &:hover {
      $offset_x: 10px;
      $offset_y: 10px;
      $blur: 6px;
      $opacity_hover: $opacity * 0.75;
      filter: drop-shadow(-$offset_x (-$offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent))
        drop-shadow($offset_x ($offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent));
        // drop-shadow((-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent))
        // drop-shadow(($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent));
    }
  }
  &:hover {
    transition: 0.7s var(--elastic_linear);
    transform: scale(1.1);
  }
}
@mixin scalloped($size: 1vw, $direction: 'vertical') {
  $size2: $size * 2;
  // @if $direction == 'vertical' {
  //   mask:
  //   linear-gradient(0, #0000 $size2, #000 0) 0 $size,
  //   radial-gradient($size, #000 calc(100% - 1px), #0000) 50% / calc(.8 * $size2) $size2 repeat space;
  // }
  // @else{
  // mask:
  //   linear-gradient(-90deg, #0000 6vw, #000 0) $size,
  //   radial-gradient($size, #000 calc(100% - 1px), #0000) 50% / $size2 calc(.8 * $size2) space space;
  // }
}
