@mixin body-bg($opacity: 0.7, $color: var(--body-color)) {
  border-radius: 15px;
  background-image: url('images/overlays/otis-redding_noise.png');
  background-color: color-mix(in srgb, $color calc(100% * $opacity), transparent);
  backdrop-filter: saturate(200%) blur(5px);
  box-shadow: 0 0 10px color-mix(in srgb, var(--active-clr_600) 20%, transparent);
}

@mixin card-bg($color: var(--body-color), $opacity: 0.7) {
  border: 1px var(--purewhite) solid;
  border-radius: 15px;
  background-color: color-mix(in srgb, var(--white) 20%, transparent);
  border-radius: 15px;
  box-shadow: 0 2px 10px color-mix(in srgb, var(--active-clr_600) 20%, transparent);
  width: 100%;
}

@mixin hover-preview($opacity: 10%, $scale: 1.1) {
  transition:
    filter 0.5s var(--bounce_linear),
    transform 0.5s var(--bounce_linear),
    backdrop-filter 0.5s var(--bounce_linear);
  transform: scale(1);
  $offset_x: 4px;
  $offset_y: 4px;
  $blur: 3px;
  @if ($opacity != 0) {
    filter:
      // drop-shadow(-$offset_x ($offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent))
      // drop-shadow($offset_x ($offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent));
      drop-shadow((-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent))
      drop-shadow(($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity, transparent));
    &:hover,
    &:active {
      $offset_x: 10px;
      $offset_y: 10px;
      $blur: 6px;
      $opacity_hover: $opacity * 0.75;
      filter:
        // drop-shadow(-$offset_x (-$offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent))
        // drop-shadow($offset_x ($offset_x / 2) $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent));
        drop-shadow((-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent))
        drop-shadow(($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--active-clr_800) $opacity_hover, transparent));
    }
  }
  &:hover,
  &:active {
    transition:
      filter 0.7s var(--elastic_linear),
      transform 0.7s var(--elastic_linear);
    transform: scale($scale);
  }
}
.hover-preview {
  @include hover-preview;
}
.hover-preview_105 {
  @include hover-preview(10%, 1.05);
}

@mixin header-top {
  background-image: url('images/overlays/otis-redding_noise.png');
  background-color: color-mix(in srgb, var(--purple-clr_700) 70%, transparent);
  box-shadow: 0 0 10px color-mix(in srgb, var(--active-clr_600) 20%, transparent);
  border-radius: 15px 15px 0 0;
  padding: 5px;
  font-size: 1.15em;
  text-align: center;
  color: var(--purple-clr_50);
}

@mixin clip-to-4() {
  // >:nth-last-child(1):nth-child(4n + 1) {
  //   display: none;
  // }
  // >:nth-last-child(2):nth-child(4n + 1),
  // >:nth-last-child(2):nth-child(4n + 2) {
  //   display: none;
  // }
  // >:nth-last-child(3):nth-child(4n + 1),
  // >:nth-last-child(3):nth-child(4n + 2),
  // >:nth-last-child(3):nth-child(4n + 3) {
  //   display: none;
  // }
}
@mixin clip-to-3() {
  // > * {
  //   background: blue;
  //   &:nth-last-child(1):nth-child(3n + 1) {
  //     display: none;
  //   }
  //   /* Hide the last two elements if the total number is 2 more than a multiple of 3 */
  //   &:nth-last-child(2):nth-child(3n + 2),
  //   &:nth-last-child(1):nth-child(3n + 2) {
  //     display: none;
  //   }
  // }
}
@mixin clip-to-2() {
  // > * {
  //   background: green;
  //   &:nth-last-child(1):nth-child(2n + 1) {
  //     display: none;
  //   }
  // }
}
