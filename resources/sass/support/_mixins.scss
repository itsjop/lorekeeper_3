@mixin body-bg($opacity: 0.7, $color: var(--body-color)) {
  border-radius: 15px;
  background-image: url('images/overlays/otis-redding_noise.png');
  background-color: color-mix(in srgb, $color calc(100% * $opacity), transparent);
  backdrop-filter: saturate(var(--var_backdrop-saturate)) blur(var(--var_backdrop-blur));
  transition: backdrop-filter 0.5s;
  box-shadow: 0 0 10px color-mix(in srgb, var(--primary-clr_600_fixed) 20%, transparent);
}

@mixin card-bg($color: var(--body-color), $opacity: 0.7) {
  border: 1px var(--purewhite) solid;
  border-radius: 15px;
  background-color: color-mix(in srgb, var(--white) 20%, transparent);
  border-radius: 15px;
  box-shadow: 0 2px 10px color-mix(in srgb, var(--primary-clr_600_fixed) 20%, transparent);
  width: 100%;
}

@mixin hover-preview($opacity: 10%, $box_shadow: 0, $onlyOnHover: 0) {
  transition:
    filter 0.5s var(--bounce_linear),
    transform 0.5s var(--bounce_linear),
    backdrop-filter 0.5s var(--bounce_linear);
  transform: scale(1);
  $offset_x: 4px;
  $offset_y: 4px;
  $blur: 3px;
  @if ($opacity != 0) {
    @if ($onlyOnHover == 0) {
      @if ($box_shadow == 0) {
        filter: drop-shadow((-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity, transparent))
          drop-shadow(($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity, transparent));
      }
      @if ($box_shadow == 1) {
        box-shadow:
          (-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity, transparent),
          ($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity, transparent);
      }
    }
    &:hover,
    &:active {
      $offset_x: 10px;
      $offset_y: 10px;
      $blur: 6px;
      $opacity_hover: $opacity * 0.75;
      @if ($box_shadow == 0) {
        filter: drop-shadow(
            (-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity_hover, transparent)
          )
          drop-shadow(($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity_hover, transparent));
      }
      @if ($box_shadow == 1) {
        box-shadow:
          (-$offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity, transparent),
          ($offset_x / 2) $offset_y $blur color-mix(in srgb, var(--primary-clr_800_fixed) $opacity, transparent);
      }
      @media (prefers-reduced-motion: reduce) {
        transition-duration: 0.1s !important;
        transition-timing-function: linear !important;
      }
    }
    @media (prefers-reduced-motion: reduce) {
      transition-duration: 0.1s !important;
      transition-timing-function: linear !important;
    }
  }
  &:hover,
  &:active {
    transition:
      filter 0.7s var(--elastic_linear),
      transform 0.7s var(--elastic_linear);
    transform: scale(1.1);

    @media (prefers-reduced-motion: reduce) {
      transition-duration: 0.1s !important;
      transition-timing-function: linear !important;
    }
  }
}
.hover-preview {
  @include hover-preview;
}

@mixin header-top {
  background-image: url('images/overlays/otis-redding_noise.png');
  background-color: color-mix(in srgb, var(--primary-clr_700) 70%, transparent);
  box-shadow: 0 0 10px color-mix(in srgb, var(--primary-clr_600) 20%, transparent);
  border-radius: 15px 15px 0 0;
  padding: 5px;
  font-size: 1.15em;
  text-align: center;
  color: var(--primary-clr_50);
}
